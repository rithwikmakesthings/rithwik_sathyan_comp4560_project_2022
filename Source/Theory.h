/*
 ==============================================================================
 Theory.h
 Created: 8 March 2022
 Author:  Rithwik Sathyan
 Theory Knowledge Base
 ==============================================================================
 */

#ifndef Theory_h
#define Theory_h


#define scaleCount 7
#define chordProgressionCount 24
#define drumPatternCount 15
#define noteLengthCount 7
#define drumPatternLength 16
#define chordProgressionLength 4
#define scaleLength 7

namespace Theory {
//Stores one octave worth of a mode of the major scale.
//First index is mode number, second index is note number.
//Helps pick out notes for other instruments to play

const int mode[scaleCount][scaleLength] =
{
    {0,2,4,5,7,9,11},   //Ionian (Major)
    {0,2,4,6,8,9,11},   //Dorian
    {0,1,3,5,7,8,10},   //Phrygian
    {0,2,4,6,7,10,11},  //Lydian
    {0,2,4,5,7,9,10},   //Mixolydian
    {0,2,3,5,7,8,10},   //Aeolian
    {0,1,3,5,6,8,10}    //Locrian
};

const int chordProgression[chordProgressionCount][chordProgressionLength] =
{
    {0,3,4,4},
    {0,4,3,1},
    {0,3,1,4},
    {0,3,4,6},
    {0,1,4,6},
    {0,3,1,6},
    
    {4,4,3,0},
    {4,4,1,0},
    {4,1,3,0},
    {6,4,3,0},
    {6,4,1,0},
    {6,1,3,0},
    
    {4,4,0,3},
    {4,4,0,1},
    {4,1,0,3},
    {6,4,0,3},
    {6,4,0,1},
    {6,1,0,3},
    
    {4,0,4,3},
    {4,0,4,1},
    {4,0,1,3},
    {6,0,4,3},
    {6,0,4,1},
    {6,0,1,3},
    
};
}

namespace DrumPatterns
{
//Stores a number of different parts for each type of drum.
//First index is pattern number, second index is hit/rest in pattern.
//A 1 signifies a hit, and a 0 signifies a rest.

const int kickPattern[drumPatternCount][drumPatternLength] =
{
    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
    {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
    {1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0},
    {1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0},
    {1,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0},
    {1,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0},
    {1,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0},
    {1,0,0,0,0,0,0,0,1,0,0,0,1,0,1,0},
    {1,0,0,0,0,0,1,0,1,0,0,0,0,0,1,0},
    {1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0},
    {1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1},
    {1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0},
    {1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0},
    {1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1},
    {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
};

const int snarePattern[drumPatternCount][drumPatternLength] =
{
    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
    {0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0},
    {0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0},
    {0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0},
    {0,0,0,0,0,0,1,0,1,0,0,0,0,1,0,0},
    {0,0,0,0,1,0,0,0,1,0,0,1,0,0,0,0},
    {0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0},
    {0,0,1,0,0,0,1,0,1,0,1,0,1,0,1,0},
    {1,0,0,0,0,0,1,0,1,0,0,0,0,0,1,0},
    {1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0},
    {1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1},
    {1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0},
    {1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0},
    {1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1},
    {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
};

const int perc1Pattern[drumPatternCount][drumPatternLength] =
{
    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
    {0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0},
    {0,0,0,1,0,0,0,0,1,0,0,1,0,1,0,0},
    {0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0},
    {0,0,0,0,0,0,1,0,1,0,0,0,0,1,0,0},
    {0,0,1,0,1,0,1,0,1,0,0,1,0,0,0,0},
    {0,0,0,0,1,0,0,0,1,0,0,0,1,0,1,0},
    {0,0,1,0,0,1,1,0,1,0,1,0,1,0,1,0},
    {1,0,0,0,0,0,1,0,1,0,0,1,0,1,1,0},
    {0,1,0,0,0,1,0,0,0,0,1,0,0,1,0,0},
    {1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1},
    {1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0},
    {1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0},
    {1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1},
    {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
};

const int perc2Pattern[drumPatternCount][drumPatternLength] =
{
    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
    {0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0},
    {0,0,0,1,0,0,0,0,1,0,0,1,0,1,0,0},
    {0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0},
    {0,0,0,0,0,0,1,0,1,0,0,0,0,1,0,0},
    {0,0,1,0,1,0,1,0,1,0,0,1,0,0,0,0},
    {0,0,0,0,1,0,0,0,1,0,0,0,1,0,1,0},
    {0,0,1,0,0,1,1,0,1,0,1,0,1,0,1,0},
    {1,0,0,0,0,0,1,0,1,0,0,1,0,1,1,0},
    {0,1,0,0,0,1,0,0,0,0,1,0,0,1,0,0},
    {1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1},
    {1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0},
    {1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0},
    {1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1},
    {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
};

}

const int noteLength[noteLengthCount] = {1,1,2,4,8,12,16};

#endif
